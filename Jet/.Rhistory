Merchant_Data_With_Avg_Ndeviations[,c("Perc_Deviations","Sales")], 3, nstart = 20)
Merchant_Data_With_Avg_Ndeviations[,c("Perc_Deviations","Sales")]
KCluster <- kmeans(,
Merchant_Data_With_Avg_Ndeviations[,c(6,8)], 3, nstart = 20)
Merchant_Data_With_Avg_Ndeviations[,c(6,8)]
KCluster <- kmeans( Merchant_Data_With_Avg_Ndeviations[,c(6,8)], 3, nstart = 20)
qplot(Sales, Perc_Deviation
, color = KCluster$cluster,
data = Merchant_Data_With_Avg_Ndeviations
)
KCluster <- kmeans( Merchant_Data_With_Avg_Ndeviations[,c(6,8)], 8, nstart = 20)
qplot(Sales, Perc_Deviation
, color = KCluster$cluster,
data = Merchant_Data_With_Avg_Ndeviations
)
KCluster <- kmeans( Merchant_Data_With_Avg_Ndeviations[,c(6,8)], 8, nstart = 20)
qplot(Sales, Perc_Deviation
, color = KCluster$cluster*10,
data = Merchant_Data_With_Avg_Ndeviations
)
KCluster
KCluster$centers
mydata <-Merchant_Data_With_Avg_Ndeviations
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6,8)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters with the Elbow Method",
pch=20, cex=2)
wss
min(wss)
min(na.omit(wss))
KCluster <- kmeans( Merchant_Data_With_Avg_Ndeviations[,c(6,8)], 8, nstart = 20)
KCluster$centers
qplot(Sales, Perc_Deviation
, color = KCluster$cluster*10,
data = Merchant_Data_With_Avg_Ndeviations
)
KCluster <- kmeans( Merchant_Data_With_Avg_Ndeviations[,c(6,8)], 8, nstart = 20)
KCluster$centers
qplot(Sales, Perc_Deviation
, color = KCluster$cluster,
data = Merchant_Data_With_Avg_Ndeviations
)
KCluster <- kmeans( Merchant_Data_With_Avg_Ndeviations[Category=='Electronics'][,c(6,8)]
, 8, nstart = 20)
KCluster <- kmeans( Merchant_Data_With_Avg_Ndeviations
[ Merchant_Data_With_Avg_Ndeviations$Category=='Electronics'][,c(6,8)]
, 8, nstart = 20)
KCluster <- kmeans( Merchant_Data_With_Avg_Ndeviations
[Merchant_Data_With_Avg_Ndeviations$Category=='Electronics',][,c(6,8)]
, 8, nstart = 20)
KCluster$centers
qplot(Sales, Perc_Deviation
, color = KCluster$cluster,
data =Merchant_Data_With_Avg_Ndeviations
[ Merchant_Data_With_Avg_Ndeviations$Category=='Electronics',]
)
ElectronicsData <- Merchant_Data_With_Avg_Ndeviations
[Merchant_Data_With_Avg_Ndeviations$Category=='Electronics',]
ElectronicsData <- Merchant_Data_With_Avg_Ndeviations[Merchant_Data_With_Avg_Ndeviations$Category=='Electronics',]
KCluster <- kmeans( ElectronicsData[,c(6,8)]
, 8, nstart = 20)
KCluster$centers
qplot(Sales, Perc_Deviation
, color = KCluster$cluster,
data =ElectronicsData
)
mydata <-ElectronicsData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6,8)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters with the Elbow Method",
pch=20, cex=2)
min(na.omit(wss))
KCluster <- kmeans( ElectronicsData[,c(6,8)]
, 11, nstart = 20)
KCluster$centers
qplot(Sales, Perc_Deviation
, color = KCluster$cluster,
data =ElectronicsData
)
KCluster <- kmeans( ElectronicsData[,c(6,8)]
, 4, nstart = 20)
KCluster$centers
qplot(Sales, Perc_Deviation
, color = KCluster$cluster,
data =ElectronicsData
)
ElectronicsData <- merge(ElectronicsData, KClusters)
ElectronicsData <- merge(ElectronicsData, KCluster)
ElectronicsData <- merge(ElectronicsData, KCluster$cluster)
ElectronicsData <- Merchant_Data_With_Avg_Ndeviations[Merchant_Data_With_Avg_Ndeviations$Category=='Electronics',]
ElectronicsData$Cluster <- KCluster$cluster
View(ElectronicsData)
ddply(na.omit(ElectronicsData), c(.(Cluster),.(Merchant)), summarize,
mean = mean(Perc_Deviation),
wmean = weighted.mean(Perc_Deviation, w=Weight))
mydata <-ElectronicsData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6,8)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters with the Elbow Method",
pch=20, cex=2)
mydata <-ElectronicsData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6,8)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Electronics",
pch=20, cex=2)
KCluster <- kmeans( ElectronicsData[,c(6,8)]
, 5, nstart = 20)
KCluster$centers
qplot(Sales, Perc_Deviation
, color = KCluster$cluster,
data =ElectronicsData
)
ElectronicsData$Cluster <- KCluster$cluster
ddply(na.omit(ElectronicsData), c(.(Cluster),.(Merchant)), summarize,
mean = mean(Perc_Deviation),
wmean = weighted.mean(Perc_Deviation, w=Weight))
View(ElectronicsData)
KCluster
KCluster$cluster
KCluster
KCluster$centers
ddply(na.omit(ElectronicsData), c(.(Cluster),.(Merchant)), summarize,
mean = mean(Perc_Deviation),
wmean = weighted.mean(Perc_Deviation, w=Weight))
ConsumersData <- Merchant_Data_With_Avg_Ndeviations[Merchant_Data_With_Avg_Ndeviations$Category=='Consumers',]
KCluster$centers
qplot(Sales, Perc_Deviation
, color = KCluster$cluster,
data =ConsumersData
)
KCluster <- kmeans( ConsumersData[,c(6,8)]
, 8, nstart = 20)
KCluster$centers
qplot(Sales, Perc_Deviation
, color = KCluster$cluster,
data =ConsumersData
)
ConsumablesData <- Merchant_Data_With_Avg_Ndeviations[Merchant_Data_With_Avg_Ndeviations$Category=='Consumables',]
KCluster <- kmeans( ConsumablesData[,c(6,8)]
, 8, nstart = 20)
KCluster$centers
qplot(Sales, Perc_Deviation
, color = KCluster$cluster,
data =ConsumablesData
)
mydata <-ConsumablesData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6,8)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Electronics",
pch=20, cex=2)
KCluster <- kmeans( ElectronicsData[,c(6,8)]
, 5, nstart = 20)
KCluster <- kmeans( ConsumablesData[,c(6,8)]
, 5, nstart = 20)
KCluster$centers
qplot(Sales, Perc_Deviation
, color = KCluster$cluster,
data =ElectronicsData
)
KCluster$centers
qplot(Sales, Perc_Deviation
, color = KCluster$cluster,
data =ConsumablesData
)
KCluster$centers
ddply(na.omit(ConsumablesData), c(.(Cluster),.(Merchant)), summarize,
mean = mean(Perc_Deviation),
wmean = weighted.mean(Perc_Deviation, w=Weight))
ConsumablesData$Cluster <- KCluster$cluster
ddply(na.omit(ConsumablesData), c(.(Cluster),.(Merchant)), summarize,
mean = mean(Perc_Deviation),
wmean = weighted.mean(Perc_Deviation, w=Weight))
KCluster$centers
ElectronicsData <- Merchant_Data_With_Avg_Ndeviations[Merchant_Data_With_Avg_Ndeviations$Category=='Electronics',]
KCluster <- kmeans( ElectronicsData[,c(6,8)]
, 8, nstart = 20)
KCluster$centers
qplot(Sales, Perc_Deviation
, color = KCluster$cluster,
data =ElectronicsData
)
mydata <-ElectronicsData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6,8)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Electronics",
pch=20, cex=2)
KCluster <- kmeans( ElectronicsData[,c(6,8)]
, 5, nstart = 20)
KCluster$centers
qplot(Sales, Perc_Deviation
, color = KCluster$cluster,
data =ElectronicsData
)
ElectronicsData$Cluster <- KCluster$cluster
ddply(na.omit(ElectronicsData), c(.(Cluster),.(Merchant)), summarize,
mean = mean(Perc_Deviation),
wmean = weighted.mean(Perc_Deviation, w=Weight))
ddply(na.omit(Merchant_Data_With_Avg_Ndeviations), .(Merchant), summarize,
mean = mean(Perc_Deviation),
wmean = weighted.mean(Perc_Deviation, w=Weight))
stdev<- ddply(na.omit(Merchant_Data_With_Avg_Ndeviations), .(Merchant_Data_With_Avg_Ndeviations$`Jet SKU ID`), summarize,
stdev = sd(Price))
Product_Perc_Deviation_Avg <- setNames(aggregate(Merchant_Data_With_Avg_Ndeviations$Perc_Deviation,
by= list(Jet_SKU_ID = Merchant_Data_With_Avg_Ndeviations$`Jet SKU ID`),
mean),c("Jet_SKU_ID", "Average_Price_Deviation"))
Product_Perc_Deviation_Avg
ddply(na.omit(Merchant_Data_With_Avg_Ndeviations), c(.(Category),.(Merchant)), summarize,
mean = mean(Perc_Deviation),
wmean = weighted.mean(Perc_Deviation, w=Weight))
qplot(Sales, Perc_Deviation
,colour = Category, shape = Merchant,
main = "All Vendors Percentage Price Deviations from Avg Price vs Sales",
data = Merchant_Data_With_Avg_Ndeviations
)
qplot(Sales, Perc_Deviation
,colour = Category,
main = "Jasmine's Percentage Price Deviations from Avg Price vs Sales",
data = Jasmines_Shop)
qplot(Sales, Perc_Deviation
,colour = Category, shape = Merchant,
main = "Alex's Store Percentage Price Deviations from Avg Price vs Sales",
data = Alex_Store)
qplot(Sales, Perc_Deviation
,colour = Category,
main = "Alex's Store Percentage Price Deviations from Avg Price vs Sales",
data = Alex_Store)
qplot(Sales, Perc_Deviation
,colour = Category,
main = "Leo's Percentage Price Deviations from Avg Price vs Sales",
data = Leos_Bodega)
ConsumerablesData <- Merchant_Data_With_Avg_Ndeviations[Merchant_Data_With_Avg_Ndeviations$Category=='Consumerables',]
#Calculate Vendors Competitiveness in Each Clusters
ConsumerablesData$Cluster <- KCluster$cluster
ddply(na.omit(ConsumerablesData), c(.(Cluster),.(Merchant)), summarize,
mean = mean(Perc_Deviation),
wmean = weighted.mean(Perc_Deviation, w=Weight))
#Identify Appropriate Number of Clusters
mydata <-ConsumerablesData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6,8)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Consumerables",
pch=20, cex=2)
#Group data into best number of clusters
KCluster <- kmeans( ConsumerablesData[,c(6,8)]
, 5, nstart = 20)
#Plot the data with clusters
qplot(Sales, Perc_Deviation
, color = KCluster$cluster,
data =ConsumerablesData
)
#Calculate Vendors Competitiveness in Each Clusters
ConsumerablesData$Cluster <- KCluster$cluster
ddply(na.omit(ConsumerablesData), c(.(Cluster),.(Merchant)), summarize,
mean = mean(Perc_Deviation),
wmean = weighted.mean(Perc_Deviation, w=Weight))
ConsumerablesData <- Merchant_Data_With_Avg_Ndeviations[Merchant_Data_With_Avg_Ndeviations$Category=='Consumerables',]
ConsumablesData <- Merchant_Data_With_Avg_Ndeviations[Merchant_Data_With_Avg_Ndeviations$Category=='Consumables',]
#Calculate Vendors Competitiveness in Each Clusters
ConsumablesData$Cluster <- KCluster$cluster
ddply(na.omit(ConsumablesData), c(.(Cluster),.(Merchant)), summarize,
mean = mean(Perc_Deviation),
wmean = weighted.mean(Perc_Deviation, w=Weight))
mydata <-ConsumablesData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6,8)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Consumables",
pch=20, cex=2)
mydata <-ConsumablesData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Consumables",
pch=20, cex=2)
mydata <-ConsumablesData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Consumables",
pch=20, cex=2)
mydata <-ConsumablesData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Consumables",
pch=20, cex=2)
mydata <-ConsumablesData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Consumables",
pch=20, cex=2)
mydata <-ConsumablesData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Consumables",
pch=20, cex=2)
mydata <-ConsumablesData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Consumables",
pch=20, cex=2)
mydata <-ConsumablesData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Consumables",
pch=20, cex=2)
mydata <-ConsumablesData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Consumables",
pch=20, cex=2)
mydata <-ConsumablesData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Consumables",
pch=20, cex=2)
mydata <-ConsumablesData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Consumables",
pch=20, cex=2)
mydata <-ConsumablesData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Consumables",
pch=20, cex=2)
mydata <-ConsumablesData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Consumables",
pch=20, cex=2)
mydata <-ConsumablesData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Consumables",
pch=20, cex=2)
mydata <-ConsumablesData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Consumables",
pch=20, cex=2)
mydata <-ConsumablesData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Consumables",
pch=20, cex=2)
mydata <-ConsumablesData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Consumables",
pch=20, cex=2)
mydata <-ConsumablesData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Consumables",
pch=20, cex=2)
mydata <-ConsumablesData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Consumables",
pch=20, cex=2)
mydata <-ConsumablesData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Consumables",
pch=20, cex=2)
mydata <-ConsumablesData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Consumables",
pch=20, cex=2)
KCluster <- kmeans( ConsumablesData[,c(6,8)]
, 5, nstart = 20)
#Plot the data with clusters
qplot(Sales, Perc_Deviation
, color = KCluster$cluster,
data =ConsumablesData
)
ConsumablesData$Cluster <- KCluster$cluster
ddply(na.omit(ConsumablesData), c(.(Cluster),.(Merchant)), summarize,
mean = mean(Perc_Deviation),
wmean = weighted.mean(Perc_Deviation, w=Weight))
HomeData <- Merchant_Data_With_Avg_Ndeviations[Merchant_Data_With_Avg_Ndeviations$Category=='Home',]
#Identify Appropriate Number of Clusters
mydata <-HomeData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Home",
pch=20, cex=2)
KCluster <- kmeans( HomeData[,c(6,8)]
, 2, nstart = 20)
#Plot the data with clusters
qplot(Sales, Perc_Deviation
, color = KCluster$cluster,
data =HomeData
)
ElectronicsData <- Merchant_Data_With_Avg_Ndeviations[Merchant_Data_With_Avg_Ndeviations$Category=='Electronics',]
#Identify Appropriate Number of Clusters
mydata <-ElectronicsData
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata[,c(6,8)],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters for Electronics",
pch=20, cex=2)
#Group data into best number of clusters
KCluster <- kmeans( ElectronicsData[,c(6)]
, 5, nstart = 20)
#Plot the data with clusters
qplot(Sales, Perc_Deviation
, color = KCluster$cluster,
data =ElectronicsData
)
ElectronicsData$Cluster <- KCluster$cluster
ddply(na.omit(ElectronicsData), c(.(Cluster),.(Merchant)), summarize,
mean = mean(Perc_Deviation),
wmean = weighted.mean(Perc_Deviation, w=Weight))
KCluster <- kmeans( HomeData[,c(6,8)]
, 2, nstart = 20)
#Plot the data with clusters
qplot(Sales, Perc_Deviation
, color = KCluster$cluster,
data =HomeData
)
HomeData$Cluster <- KCluster$cluster
ddply(na.omit(HomeData), c(.(Cluster),.(Merchant)), summarize,
mean = mean(Perc_Deviation),
wmean = weighted.mean(Perc_Deviation, w=Weight))
